name: Deploy to AKS

on:
 push:
  branches:
   - main
 workflow_dispatch:

jobs:
 lint:
  runs-on: ubuntu-latest
  steps:
   - name: check out code
     uses: actions/checkout@v2
   - name: Login via Azure CLI
     uses: azure/login@v1
     with: 
      creds: ${{ secrets.AZURE_CREDENTIALS }}
   - name: login to Docker Hub
     uses: azure/docker-login@v1
     with:
      username: ${{ secrets.REGISTRY_USERNAME }}
      password: ${{ secrets.REGISTRY_TOKEN }}
      login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v2
   - name: Build Docker Image
     working-directory: .
     run: |
      docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/my-go-app:${{ github.sha }}
      docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/my-go-app:${{ github.sha }}
   - name: Slim the image
     id: slim
     uses: kitabisa/docker-slim-action@v1
     env:
      DSLIM_HTTP_PROBE: false
     with:
      target: ${{ github.repository }}:latest
      tag: "slim"
   - name: Run Trivy vulnerability scanner
     uses: aquasecurity/trivy-action@master
     continue-on-error: true
     with:
        image-ref: 'docker.io/${{ github.repository }}:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'MEDIUM,HIGH,CRITICAL'
   - name: Push the image 
     with:
      context: .
      push: true
      tags: 'latest'
     uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
   - name: Dump the report
     run: echo "${REPORT}"
     env:
      REPORT: ${{ steps.slim.outputs.report }}
      
   
